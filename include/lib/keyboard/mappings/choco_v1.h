#ifndef CHOCO_V1_MAPPINGS_H
#define CHOCO_V1_MAPPINGS_H

#include <lib/keyboard/kb_mappings.h>

// LEFT:

RULES_MOD_KEY(KEY00, KEY_LEFTFN);
RULES_FOR_KEY(KEY01){
    RULES_SIMPLE(KEY_ESCAPE),
};
RULES_MOD_KEY(KEY02, KEY_LEFTALT);

RULES_FOR_KEY(KEY10){
    RULE(MOD_ANYLAYER, KEY_1_EXCLAMATION, true),
    RULES_SIMPLE(KEY_Q),
};
RULES_FOR_KEY(KEY11){
    RULE(MOD_ANYLAYER, KEY_0_RPAREN, false),
    RULES_SIMPLE(KEY_A),
};
RULES_FOR_KEY(KEY12){
    RULES_SIMPLE(KEY_Z),
};

RULES_FOR_KEY(KEY20){
    RULE(MOD_ANYLAYER, KEY_2_ATSIGN, true),
    RULES_SIMPLE(KEY_W),
};
RULES_FOR_KEY(KEY21){
    RULE(MOD_ANYLAYER, KEY_1_EXCLAMATION, false),
    RULES_SIMPLE(KEY_S),
};
RULES_FOR_KEY(KEY22){
    RULE(MOD_ANYLAYER, KEY_SLASH_QUESTIONMARK, false),
    RULES_SIMPLE(KEY_X),
};

RULES_FOR_KEY(KEY30){
    RULE(MOD_ANYLAYER, KEY_3_NUMBERSIGN, true),
    RULES_SIMPLE(KEY_E),
};
RULES_FOR_KEY(KEY31){
    RULE(MOD_ANYLAYER, KEY_2_ATSIGN, false),
    RULES_SIMPLE(KEY_D),
};
RULES_FOR_KEY(KEY32){
    RULE(MOD_ANYLAYER, KEY_EQUALS_PLUS, false),
    RULES_SIMPLE(KEY_C),
};

RULES_FOR_KEY(KEY40){
    RULE(MOD_ANYLAYER, KEY_4_DOLLARSIGN, true),
    RULES_SIMPLE(KEY_R),
};
RULES_FOR_KEY(KEY41){
    RULE(MOD_ANYLAYER, KEY_3_NUMBERSIGN, false),
    RULES_SIMPLE(KEY_F),
};
RULES_FOR_KEY(KEY42){
    RULE(MOD_ANYLAYER, KEY_SEMICOLON_COLON, false),
    RULES_SIMPLE(KEY_V),
};

RULES_FOR_KEY(KEY50){
    RULE(MOD_ANYLAYER, KEY_5_PERCENTSIGN, true),
    RULES_SIMPLE(KEY_T),
};
RULES_FOR_KEY(KEY51){
    RULE(MOD_ANYLAYER, KEY_4_DOLLARSIGN, false),
    RULES_SIMPLE(KEY_G),
};
RULES_FOR_KEY(KEY52){
    RULE(MOD_ANYLAYER, KEY_GRAVEACCENT_TILDE, true),
    RULES_SIMPLE(KEY_B),
};

RULES_MOD_KEY(KEY60, KEY_LEFTCONTROL);
RULES_MOD_KEY(KEY61, KEY_LEFTSHIFT);
RULES_FOR_KEY(KEY62){
    RULES_SIMPLE(KEY_SPACEBAR),
};
RULES_FOR_KEY(KEY63){
    RULES_SIMPLE(KEY_TAB),
};

// RIGHT:

RULES_FOR_KEY(KEY70){
    RULES_SIMPLE(KEY_BACKSPACE),
};
RULES_FOR_KEY(KEY71){
    RULES_SIMPLE(KEY_ENTER),
};
RULES_MOD_KEY(KEY72, KEY_LEFTLAYER);
RULES_FOR_KEY(KEY73){
    RULES_SIMPLE(KEY_NOKEY),
};

RULES_FOR_KEY(KEY80){
    RULE(MOD_ANYLAYER, KEY_6_CARET, true),
    RULES_SIMPLE(KEY_Y),
};
RULES_FOR_KEY(KEY81){
    RULE(MOD_ANYLAYER, KEY_5_PERCENTSIGN, false),
    RULES_SIMPLE(KEY_H),
};
RULES_FOR_KEY(KEY82){
    RULE(MOD_ANYLAYER, KEY_GRAVEACCENT_TILDE, false),
    RULES_SIMPLE(KEY_N),
};

RULES_FOR_KEY(KEY90){
    RULE(MOD_ANYLAYER, KEY_7_AMPERSAND, true),
    RULES_SIMPLE(KEY_U),
};
RULES_FOR_KEY(KEY91){
    RULE(MOD_ANYLAYER, KEY_6_CARET, false),
    RULES_SIMPLE(KEY_J),
};
RULES_FOR_KEY(KEY92){
    RULE(MOD_ANYLAYER, KEY_APOSTROPHE_QUOTES, false),
    RULES_SIMPLE(KEY_M),
};

RULES_FOR_KEY(KEY100){
    RULE(MOD_ANYLAYER, KEY_8_STAR, true),
    RULES_SIMPLE(KEY_I),
};
RULES_FOR_KEY(KEY101){
    RULE(MOD_ANYLAYER, KEY_7_AMPERSAND, false),
    RULES_SIMPLE(KEY_K),
};
RULES_FOR_KEY(KEY102){
    RULE(MOD_ANYLAYER | MOD_ANYSHIFT, KEY_DOT_GREATERTHAN, true),
    RULE(MOD_ANYLAYER, KEY_COMMA_LESSTHAN, true),
    RULE(MOD_ANYSHIFT, KEY_COMMA_LESSTHAN, false),
    RULE(MOD_NONE, KEY_DOT_GREATERTHAN, false),
};

RULES_FOR_KEY(KEY110){
    RULE(MOD_ANYLAYER, KEY_9_LPAREN, true),
    RULES_SIMPLE(KEY_O),
};
RULES_FOR_KEY(KEY111){
    RULE(MOD_ANYLAYER, KEY_8_STAR, false),
    RULES_SIMPLE(KEY_L),
};
RULES_FOR_KEY(KEY112){
    RULE(MOD_ANYLAYER | MOD_ANYSHIFT, KEY_BACKSLASH_VERTICALBAR, true),
    RULE(MOD_ANYLAYER, KEY_BACKSLASH_VERTICALBAR, false),
    RULES_SIMPLE(KEY_MINUS_UNDERSCORE),
};

RULES_FOR_KEY(KEY120){
    RULE(MOD_ANYLAYER, KEY_0_RPAREN, true),
    RULES_SIMPLE(KEY_P),
};
RULES_FOR_KEY(KEY121){
    RULE(MOD_ANYLAYER, KEY_9_LPAREN, false),
    RULE(MOD_ANYSHIFT, KEY_SQBRACKETR_CURBRACER, false),
    RULE(MOD_NONE, KEY_SQBRACKETL_CURBRACEL, false),
};
RULES_FOR_KEY(KEY122){
    RULE(MOD_ANYSHIFT, KEY_SQBRACKETR_CURBRACER, true),
    RULE(MOD_NONE, KEY_SQBRACKETL_CURBRACEL, true),
};

RULES_MOD_KEY(KEY130, KEY_LEFTFN);
RULES_MOD_KEY(KEY131, KEY_RIGHTSHIFT);
RULES_MOD_KEY(KEY132, KEY_RIGHTGUI);

DEFAULT_KEYMAP_DEFINE(KEY(KEY50), KEY(KEY51), KEY(KEY52), KEY(KEY63),
                      KEY(KEY62), KEY(KEY61), KEY(KEY60), KEY(KEY40),
                      KEY(KEY41), KEY(KEY42), KEY(KEY30), KEY(KEY31),
                      KEY(KEY32), KEY(KEY20), KEY(KEY21), KEY(KEY22),
                      KEY(KEY10), KEY(KEY11), KEY(KEY12), KEY(KEY00),
                      KEY(KEY01), KEY(KEY02), KEY(KEY80), KEY(KEY81),
                      KEY(KEY82), KEY(KEY70), KEY(KEY71), KEY(KEY72),
                      KEY(KEY73), KEY(KEY90), KEY(KEY91), KEY(KEY92),
                      KEY(KEY100), KEY(KEY101), KEY(KEY102), KEY(KEY110),
                      KEY(KEY111), KEY(KEY112), KEY(KEY120), KEY(KEY121),
                      KEY(KEY122), KEY(KEY130), KEY(KEY131), KEY(KEY132));

#endif // CHOCO_V1_MAPPINGS_H
